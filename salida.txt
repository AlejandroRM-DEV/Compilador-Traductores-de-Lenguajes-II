.486
.model flat, stdcall
option casemap :none
include \masm32\include\windows.inc
include \masm32\macros\macros.asm
include \masm32\include\masm32.inc
include \masm32\include\gdi32.inc
include \masm32\include\user32.inc
include \masm32\include\kernel32.inc
includelib \masm32\lib\masm32.lib
includelib \masm32\lib\gdi32.lib
includelib \masm32\lib\user32.lib
includelib \masm32\lib\kernel32.lib
.data
a dword 0
b dword 0
abc dword 0
.code
start:
push 1
pop a
WHILE30: 
push a
push 10
pop ebx
pop eax
cmp eax, ebx
jle VERDADERO33
push 0
jmp FIN34
VERDADERO33:
push 1
FIN34:
pop eax
cmp eax, 1
jne ELSE32
push a
pop eax
print str$(eax)
print chr$(13,10)
push a
push 1
pop ebx
pop eax
add eax, ebx
push eax
pop a
jmp WHILE30
ELSE32: 
FIN31: 
IF35: 
push a
push 10
pop ebx
pop eax
cmp eax, ebx
jge VERDADERO38
push 0
jmp FIN39
VERDADERO38:
push 1
FIN39:
pop eax
cmp eax, 1
jne ELSE37
push 1
pop eax
print str$(eax)
print chr$(13,10)
jmp FIN36
ELSE37: 
push 0
pop eax
print str$(eax)
print chr$(13,10)
FIN36: 
IF40: 
push a
push 10
pop ebx
pop eax
cmp eax, ebx
jl VERDADERO43
push 0
jmp FIN44
VERDADERO43:
push 1
FIN44:
pop eax
cmp eax, 1
jne ELSE42
push 1
pop eax
print str$(eax)
print chr$(13,10)
jmp FIN41
ELSE42: 
push 0
pop eax
print str$(eax)
print chr$(13,10)
FIN41: 
push 1
pop b
WHILE45: 
push b
push 10
pop ebx
pop eax
cmp eax, ebx
jle VERDADERO48
push 0
jmp FIN49
VERDADERO48:
push 1
FIN49:
pop eax
cmp eax, 1
jne ELSE47
push 1
pop abc
WHILE50: 
push abc
push 10
pop ebx
pop eax
cmp eax, ebx
jle VERDADERO53
push 0
jmp FIN54
VERDADERO53:
push 1
FIN54:
pop eax
cmp eax, 1
jne ELSE52
IF55: 
push abc
push 10
pop ebx
pop eax
cmp eax, ebx
jl VERDADERO58
push 0
jmp FIN59
VERDADERO58:
push 1
FIN59:
pop eax
cmp eax, 1
jne ELSE57
push 10
pop eax
neg eax
push eax
pop eax
print str$(eax)
print chr$(13,10)
jmp FIN56
ELSE57: 
push abc
pop eax
print str$(eax)
print chr$(13,10)
FIN56: 
push abc
push 1
pop ebx
pop eax
add eax, ebx
push eax
pop abc
jmp WHILE50
ELSE52: 
FIN51: 
push b
pop eax
print str$(eax)
print chr$(13,10)
push b
push 1
pop ebx
pop eax
add eax, ebx
push eax
pop b
jmp WHILE45
ELSE47: 
FIN46: 
exit
end start
